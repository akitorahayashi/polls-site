services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - static-volume:/app/static
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      # Python標準ライブラリで/health/をチェック（追加依存なし）
      test: ["CMD-SHELL", "python -c \"import sys,urllib.request; sys.exit(0 if urllib.request.urlopen('http://localhost:8000/health/', timeout=5).status==200 else 1)\""]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  db:
    image: postgres:16-alpine
    volumes:
      - postgres-db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  nginx:
    build:
      context: ./nginx
    ports:
      - "${WEB_HOST:-127.0.0.1}:${WEB_PORT:-8000}:80"
    volumes:
      - static-volume:/app/static
    depends_on:
      - web
    restart: unless-stopped

volumes:
  postgres-db:
    name: ${COMPOSE_PROJECT_NAME:-polls-site}-postgres-db
    external: false
  static-volume:
    name: ${COMPOSE_PROJECT_NAME:-polls-site}-static-volume
    external: false